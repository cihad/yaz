{"version":3,"file":"yaz.js","sources":["../src/node.mjs","../src/range.mjs","../src/index.mjs"],"sourcesContent":["const SELF_CLOSING_TAGS = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr']\n\n// node'nin text node olup olmadigini denetler\nconst isTextNode = node => node.nodeType == Node.TEXT_NODE\n\n// node'nin element node olup olmadigini denetler\nconst isElementNode = node => node.nodeType == Node.ELEMENT_NODE\n\n// node'un baska kardesi olup olmadigini denetler\nconst isOnlyChild = node => node.parentElement.childNodes.length === 1\n\nconst isSelfClosing = node => {\n\tif (node.nodeType === Node.TEXT_NODE) return false\n\treturn SELF_CLOSING_TAGS.includes(node.tagName.toLowerCase())\n}\n\nconst isEmpty = node => {\n\tif (!node.hasChildNodes()) return true\n\n\treturn Array.from(node.childNodes).every(node => {\n\t\tif (isTextNode(node)) {\n\t\t\treturn node.textContent.trim() === ''\n\t\t} else {\n\t\t\treturn isEmpty(node)\n\t\t}\n\t})\n}\n\nconst wrapOutWith = (dom, wrapperDOM) => {\n\tdom.parentNode.insertBefore(wrapperDOM, dom)\n\twrapperDOM.appendChild(dom)\n\treturn wrapperDOM\n}\n\nconst wrapInWith = (dom, wrapperDOM) => {\n\tif (dom.nodeType === Node.TEXT_NODE) return\n\tif (isSelfClosing(dom)) return\n\tcopyPasteChildNodes(wrapperDOM, dom)\n\tdom.appendChild(wrapperDOM)\n\treturn dom\n}\n\nconst copyPasteChildNodes = (pasteDOM, copyDOM) => {\n\twhile (copyDOM.childNodes.length > 0) {\n\t\tpasteDOM.appendChild(copyDOM.childNodes[0]);\n\t}\n\treturn pasteDOM\n}\n\nconst composedPath = function(node) { \n\treturn getParentElements(node)\n}\n\nconst getParents = (node, parentType = \"parentNode\") => {\n\tlet path = [],\n\t\tcurrentNode = node\n\t\n\twhile (currentNode) {\n\t\tif (parentType === \"parentElement\" && currentNode.nodeType === Node.TEXT_NODE) {\n\t\t\tcurrentNode = currentNode[parentType];\n\t\t\tcontinue\n\t\t} else {\n\t\t\tpath = [...path, currentNode]\n\t\t\tcurrentNode = currentNode[parentType];  \n\t\t}\n\t}\n\t\n\treturn path;\n}\n\nconst getParentsUntil = (node, parentNode, parentType = \"parentNode\") => {\n\tif (!node || !parentNode) return []\n\t\n\tlet path = [],\n\t\tcurrentNode = node\n\t\n\twhile (currentNode && currentNode !== parentNode) {\n\t\tif (parentType === \"parentElement\" && currentNode.nodeType === Node.TEXT_NODE) {\n\t\t\tcurrentNode = currentNode[parentType];\n\t\t\tcontinue\n\t\t} else {\n\t\t\tpath = [...path, currentNode]\n\t\t\tcurrentNode = currentNode[parentType];  \n\t\t}\n\t}\n\t\n\treturn path;\n}\n\nconst getParentNodes = node => getParents(node, \"parentNode\")\nconst getParentElements = node => getParents(node, \"parentElement\")\nconst getParentNodesUntil = (node, parentNode) => getParentsUntil(node, parentNode, \"parentNode\")\nconst getParentElementsUntil = (node, parentNode) => getParentsUntil(node, parentNode, \"parentElement\")\n\nexport {\n\tisTextNode,\n\tisElementNode,\n\tisOnlyChild,\n\tisEmpty,\n\tgetParents,\n\tgetParentsUntil,\n\tgetParentNodes,\n\tgetParentElements,\n\tgetParentNodesUntil,\n\tgetParentElementsUntil,\n\tcomposedPath,\n\tcopyPasteChildNodes,\n\twrapInWith,\n\twrapOutWith,\n\tisSelfClosing,\n}","import {\n\tcopyPasteChildNodes,\n\tgetParentElements,\n\tgetParentElementsUntil,\n\tgetParentsUntil,\n\tgetParents,\n\tisOnlyChild,\n\tisElementNode,\n\tisTextNode,\n\tisEmpty,\n} from \"./node.mjs\"\n\n// →selection←\n// ↕: collapsed\n\nconst ZERO_WITH_TEXT_NODE = () => document.createTextNode(\"\\u200B\")\nconst UN_EXEC_COMMAND_MAP = {\n\tSTRONG: 'bold',\n\tEM: 'italic',\n\tITALIC: 'italic',\n\tLINK: 'unlink',\n\tA: 'unlink',\n\tU: 'underline',\n}\n\n// range'in tag a sahip olmadigini denetler.\n// Ornek:\n// <strong>deneme →ali← veli</strong> \t\t\t\t\t=> isWrappedWith('STRONG') // true\n// <strong>deneme al↕i veli</strong> \t\t\t\t\t=> isWrappedWith('STRONG') // true\n// <strong>deneme →ali veli</strong><em>kirk←dokuz</em> => isWrappedWith('STRONG') // false\n// <strong>deneme →ali veli</strong><em>kirk←dokuz</em> => isWrappedWith('EM') // false\n// <strong>deneme <em>al↕i</em> veli</strong> \t\t\t=> isWrappedWith('EM') // true\n// <strong>deneme <em>a→li←</em> veli</strong> \t\t\t=> isWrappedWith('STRONG') // true\nconst isWrappedWith = function(tagName, parentDOM) {\n\tconst range = getRange()\n\tif (!range) return\n\t\n\tconst node = range.commonAncestorContainer\n\n\tconst selectedTag = isSelectedWholeContentAnElement()\n\tif (selectedTag && selectedTag.tagName === tagName) {\n\t\treturn selectedTag\n\t} else if (selectedTag) {\n\t\treturn (getParentElements(range.commonAncestorContainer) || []).some(el => el.tagName === tagName)\n\t}\n\t\n\tif (parentDOM) {\n\t\tif (!parentDOM.contains(node)) return false\n\t\treturn getParentsUntil(range.commonAncestorContainer, parentDOM).some(element => element.tagName === tagName)\n\t} else {\n\t\treturn getParents(range.commonAncestorContainer).some(element => element.tagName === tagName)\n\t}\n}\n\n// rangein ust elemanlarindan herhangi birinde className e sahip eleman olup olmadigini denetler\n// <span class=\"note\">ali ve↕li kirkdokuz</span><strong>elli</strong> \t\t\t=> isWrappedWithClassName('note') // true\n// <span class=\"note\">ali ve→li← kirkdokuz</span><strong>elli</strong> \t\t\t=> isWrappedWithClassName('note') // true\n// <span class=\"note\">ali <em>ve→li←</em> kirkdokuz</span><strong>elli</strong> => isWrappedWithClassName('note') // true\n// <span class=\"note\">ali ve→li kirkdokuz</span><strong>el←li</strong> \t\t\t=> isWrappedWithClassName('note') // false\n// <span class=\"note\">ali <em>ve→li</em> kirkdokuz</span><strong>el←li</strong> => isWrappedWithClassName('note') // false\nconst isWrappedWithClassName = function(className, parentDOM) {\n\tconst range = getRange()\n\tif (!range) return\n\n\tlet dom = isSelectedWholeContentAnElement()\n\tif (dom && dom.classList.contains(className)) return true\n\n\tconst node = range.commonAncestorContainer\n\tif (parentDOM) {\n\t\treturn getParentElementsUntil(node, parentDOM).some(node => node.classList.contains(className))\n\t} else {\n\t\treturn getParentElements(node).some(node => node.classList.contains(className))\n\t}\n}\n\n// IYILESTIR EGER ELEMENT ALTINDAKI TEXT NODE HEPSI SECILSE BILE UNDEFINED DONUYOR.\n// secimin hepsinin bir elemana eslesip eslesmedigini denetler\n// \nconst isSelectedAnElement = (range) => {\n\tconst textNode = isAllSelectedATextNode(range)\n\tif ( textNode && isOnlyChild(textNode))\n\t\treturn textNode.parentElement\n\n\tconst contentDocument = range.cloneContents()\n\tconst elementNodes = Array.from(contentDocument.childNodes).filter(node => !(node.nodeType === Node.TEXT_NODE && node.textContent === \"\"))\n\tif (elementNodes.some(node => node.nodeType === Node.TEXT_NODE)) return\n\treturn elementNodes.length === 1 && range.startContainer.childNodes[range.startOffset]\n}\n\n// secimin icinde element yoksa true dondurur degilse false\n// <span class=\"note\">→ali veli kirkdokuz ←<strong>elli</strong></span>\t=> isAllSelectedATextNode(range) // true\n// <span class=\"note\">→ali veli← kirkdokuz <strong>elli</strong></span>\t=> isAllSelectedATextNode(range) // false\n// <span class=\"note\">→ali veli kirkdokuz <strong>elli←</strong></span>\t=> isAllSelectedATextNode(range) // false\n// <span class=\"note\">ali veli kirkdokuz <strong>→elli←</strong></span>\t=> isAllSelectedATextNode(range) // true\nconst isAllSelectedATextNode = range => {\n\tconst { startContainer, startOffset } = range\n\tconst { childNodes } = range.cloneContents()\n\n\tif (Array.from(childNodes).some(isElementNode)) return false\n\n\tconst textNode = isTextNode(startContainer) ? startContainer : startContainer.childNodes[startOffset]\n\n\treturn textNode\n\t\t&& isTextNode(textNode)\n\t\t&& textNode.textContent.trim() === (childNodes.length && childNodes[0].textContent.trim())\n\t\t&& textNode\n}\n\n// <span class=\"note\">→ali veli kirkdokuz ←<strong>elli</strong></span>\n// => isSelectedWholeContentAnElement() // false\n// \n// <span class=\"note\">→ali veli kirkdokuz <strong>elli</strong>←</span>\n// => isSelectedWholeContentAnElement() // true\n// \n// <span class=\"note\">→ali veli kirkdokuz <strong>el←li</strong></span>\n// => isSelectedWholeContentAnElement() // false\nconst isSelectedWholeContentAnElement = () => {\n\tconst range = getRange()\n\tif (!range) return\n\t\n\tconst { startContainer, startOffset, endContainer, endOffset } = range\n\n\tif (\n\t\tArray.from(startContainer.parentElement.childNodes).indexOf(startContainer) === 0\n\t\t&& startOffset === 0\n\t\t&& Array.from(endContainer.parentElement.childNodes).indexOf(endContainer) === endContainer.parentElement.childNodes.length - 1\n\t\t&& endContainer.nodeType === Node.TEXT_NODE\n\t\t&& endContainer.textContent.length === endOffset\n\t\t&& endContainer.parentElement === startContainer.parentElement\n\t) {\n\t\treturn startContainer.parentElement\n\t}\n\n\treturn isSelectedAnElement(range)\n}\n\n\n// O anki range'i verir. Range yoksa undefined verir.\nconst getRange = () => {\n\tconst selection = document.getSelection()\n\tif (selection.rangeCount === 0) return\n\treturn selection.getRangeAt(0)\n}\n\n// Secimi verilen dom ile kaplar.\n// const strong = document.createElement('STRONG')\n// Lorem →ipsum dolor← sit amet\n// => surround(strong) // Lorem <strong>→ipsum dolor←</strong> sit amet\n// \n// <em>Lorem →ipsum <u>dolor← sit</u> amet</em>\n// => surround(strong)\n// => <em>Lorem <strong>→ipsum <u>dolor</u>←</strong> <u>sit</u> amet</em>\n// \n// Lorem ipsum dolor↕ sit amet\n// => surround(strong) // Lorem ipsum dolor<strong>&#8203;↕</strong> sit amet\nconst surround = function(elementDOM) {\n\tlet range = getRange()\n\tif (!range) return\n\t\n\tif (range.collapsed) {\n\t\tconst textNode = ZERO_WITH_TEXT_NODE()\n\t\trange.insertNode(textNode)\n\t\trange.selectNode(textNode)\n\t}\n\n\twrapSelectionWith(elementDOM)\n\n\trange.selectNodeContents(elementDOM)\n\n\t// if (range.collapsed) {\n\t// \trange.setStartAfter(textNode)\n\t// \trange.setEndAfter(textNode)\n\t// }\n}\n\n// secimi verilen dom ile kaplar.\n// const strong = document.createElement('STRONG')\n// Lorem →ipsum dolor← sit amet\n// => wrapSelectionWith(strong) // Lorem <strong>ipsum dolor</strong> sit amet\n// \n// <em>Lorem →ipsum <u>dolor← sit</u> amet</em>\n// => wrapSelectionWith(strong)\n// => <em>Lorem <strong>ipsum <u>dolor</u></strong> <u>sit</u> amet</em>\n// \n// Lorem ipsum dolor↕ sit amet\n// => wrapSelectionWith(strong) // Lorem ipsum dolor<strong>&#8203;</strong> sit amet\nconst wrapSelectionWith = function(elementDOM) {\n\tconst range = getRange()\n\tif (!range) return\n\tconst content = range.extractContents()\n\tcopyPasteChildNodes(elementDOM, content)\n\trange.insertNode(elementDOM)\n\n\t// let lowestWrapper = elementDOM;\n\n\t// const hasOneElement = node => {\n\t// \tif (node.childNodes.length === 1) return true\n\n\t// \treturn node\n\t// \t\t.childNodes\n\t// \t\t.filter(CustomNode.isElementNode)\n\t// \t\t.length === 1\n\t// }\n\n\t// while (hasOneElement(lowestWrapper)) {\n\t// \tlowestWrapper = lowestWrapper\n\t// }\n}\n\n\n// <strong>→<em><u>lorem ipsum dolor sit amet</u></em>←</strong>\n// wholeNestedElements(range) => [strong, em, u, text]\nconst wholeNestedElements = range => {\n\tlet selectedElement = isSelectedAnElement(range)\n\tif (!selectedElement) return\n\n\tlet elements = [selectedElement]\n\tlet currentElement = selectedElement\n\n\t// To Up\n\twhile (currentElement.parentElement.childNodes.length === 1) {\n\t\telements = [currentElement.parentElement, ...elements]\n\t\tcurrentElement = currentElement.parentElement\n\t}\n\n\tcurrentElement = selectedElement\n\n\t// To Down\n\twhile (currentElement.childNodes.length === 1) {\n\t\tcurrentElement = currentElement.childNodes[0]\n\t\telements = [...elements, currentElement]\n\t}\n\n\treturn elements\n}\n\n// collapsed range'in secili oldugu texti iki textNode'a boler\n// <strong>Lorem ip↕sum dolor</strong> => splitText()\n//         ↳______↲ ↳_______↲\n//         textNode  textNode\nconst splitText = () => {\n\tconst range = getRange()\n\tif (!range) return\n\n\trange.startContainer.splitText(range.startOffset)\n\treturn [range.startContainer, range.startContainer.nextSibling]\n}\n\n\n// Ornek asagidaki gibi bir agac olsun. dolor'dan sonra ikiye bolelim.\n// <span>Lorem <strong>ipsum <em>dolor↕ sit</em> amet</strong> consetetur.</span>\n//                               ↳___↲\n//                                node\n// => const [mevcutDOM, yeniElement, bosElement] = nextSlice(node, \"SPAN\")\n// dedikten sonra mevcut dom:\n// <span>Lorem <strong>ipsum <em>dolor</em></strong></span>\n// return edilen degerler:\n// mevcutDOM: <span>Lorem <strong>ipsum <em>dolor</em></strong></span>\n// yeniElement: <span><strong><em> sit</em> amet</strong> consetetur.</span>\n// bosElement: <strong><em>&#8203;</em></strong>\n// Baska ornek:\n// <span>Lorem <strong>ipsum <em>dolor↕ sit</em> amet</strong> consetetur.</span>\n//                               ↳___↲\n//                                node\n// => const [mevcutDOM, yeniElement, bosElement] = nextSlice(node, \"STRONG\")\n// mevcutDOM => <span>Lorem <strong>ipsum <em>dolor</em></strong> consetetur.</span>\n// yeniElement => <strong><em>sit</em> amet</strong>\n// bosElement => <em>&#8203;</em>\nconst nextSlice = (\n\tnode,\n\tuntil,\n\tnewEl = document.createTextNode(''),\n\tchildEl = document.createTextNode(\"\\u200B\")\n) => {\n\tconst { parentElement } = node\n\tconst el = parentElement.cloneNode()\n\tconst emptyEl = el.cloneNode()\n\temptyEl.append(childEl)\n\tel.append(newEl)\n\twhile (node.nextSibling) {\n\t\tel.append(node.nextSibling)\n\t}\n\n\tif (parentElement && matchElements(el, until)) {\n\t\tlet prevNode = parentElement,\n\t\t\tnextNode = el\n\n\t\tif (isEmpty(parentElement)) {\n\t\t\tprevNode = parentElement.previousSibling\n\t\t\tparentElement.remove()\n\t\t}\n\n\t\tif (isEmpty(el)) {\n\t\t\tnextNode = new DocumentFragment()\n\t\t\tel.remove()\n\t\t}\n\n\t\treturn [prevNode, childEl, nextNode]\n\t} else {\n\t\treturn nextSlice(parentElement, until, el, emptyEl)\n\t}\n}\n\nconst abc = (range, until, newEl, childEl)=> {\n\tif (isTextNode(range.startContainer)) {\n\t\tconst { startContainer, startOffset, endContainer, endOffset } = range\n\t\tlet text\n\t\tif (startContainer === endContainer) {\n\t\t\ttext = startContainer.textContent.slice(startOffset, endOffset)\n\t\t\tstartContainer.textContent = startContainer.textContent.slice(0, startOffset) \n\t\t\t\t+ startContainer.textContent.slice(endOffset)\n\t\t\trange.setStart(startContainer, startOffset)\n\t\t} else {\n\t\t\ttext = startContainer.textContent.slice(startOffset)\n\t\t\tstartContainer.textContent = startContainer.textContent.slice(0, startOffset)\n\t\t\trange.setStart(startContainer, startOffset)\n\t\t}\n\n\t\tconst textNode = document.createTextNode(text)\n\n\t\tconst el = range.startContainer.parentElement.cloneNode()\n\t\tel.append(textNode)\n\t\treturn el\n\t} else {\n\t\trange.startContainer.childNodes\n\t}\n}\n\n// <span class=\"note\">Lorem ipsum <strong>→dolor sit←</strong> amet.</span>\n// => undo(\"STRONG\")\n// => <span class=\"note\">Lorem ipsum →dolor sit← amet.</span>\nconst undo = until => {\n\tconst range = getRange()\n\tif (!range) return\n\n\tif (range.collapsed) {\n\t\tsplitBetweenWith(until)\n\t\treturn\n\t}\n\n\tconst element = isSelectedAnElement(range)\n\n\tif (element) {\n\t\trange.selectNode(element)\n\t}\n\n\tlet extractedDoc = \trange.extractContents()\n\n\tif (\n\t\textractedDoc.childNodes.length === 1 \n\t\t&& extractedDoc.firstElementChild\n\t\t&& extractedDoc.firstElementChild.tagName === until\n\t) {\n\t\textractedDoc = Array.from(extractedDoc.childNodes[0].childNodes).reduce((acc, node) => {\n\t\t\tacc.append(node)\n\t\t\treturn acc\n\t\t}, new DocumentFragment())\n\n\t\trange.insertNode(extractedDoc)\n\t} else {\n\t\tlet startNode\n\n\t\tif (isTextNode(range.startContainer)) {\n\t\t\tstartNode = splitText()[0]\n\t\t} else {\n\t\t\tstartNode = range.startContainer.childNodes[range.startOffset-1]\n\t\t}\n\t\tconst [mountedDOM,,nextDOM] = nextSlice(startNode, until)\n\t\n\t\tmountedDOM.after(nextDOM)\n\t\tmountedDOM.after(extractedDoc)\n\t\n\t\trange.setStartAfter(mountedDOM)\n\t\trange.setEndBefore(nextDOM)\n\t}\n\n\n\t// let beforeNode\n\t\n\t// let [beforeNode,] = splitText()\n\t\n\t// if (isTextNode(range.startContainer)) {\n\t// \tbeforeNode = splitText()[0]\n\t// } else {\n\t// \tbeforeNode = range\n\t// \t\t.startContainer\n\t// \t\t.childNodes[range.startOffset]\n\t// \t\t.previousSibling\n\t// }\n\t// const [existDOM,,nextDOM] = nextSlice(beforeNode, until)\n\t// existDOM.after(nextDOM)\n\n\t// range.insertNode(selection)\n}\n\n// DOM ile 2. parametredeki kuralin eslesip eslesmedigini kontrol eder.\n// const el = document.createElement('SPAN')\n// matchElements(el, \"span\") => true\n// el.classList.add('note')\n// matchElements(el, { tagName: 'SPAN', className: 'note' }) => true\nconst matchElements = (el, obj) => {\n\tif (typeof obj === 'string') obj = { tagName: obj }\n\n\treturn el.tagName === obj.tagName\n\t\t&& (el.classList.length === 0 || el.classList.contains(obj.className))\n}\n\nconst splitBetweenWith = tagName => {\n\tconst [node, ] = splitText()\n\tconst [dom, emptyDOM, newDOM] = nextSlice(node, tagName)\n\tdom.after(newDOM)\n\tdom.after(emptyDOM)\n\tconst range = getRange()\n\tif (!range) return\n\tlet textNode = emptyDOM\n\twhile (textNode.firstChild) {\n\t\ttextNode = textNode.firstChild\n\t}\n\trange.selectNode(textNode)\n}\n\nexport {\n\tgetRange,\n\tisWrappedWith,\n\tisWrappedWithClassName,\n\tisAllSelectedATextNode,\n\tisSelectedAnElement,\n\tisSelectedWholeContentAnElement,\n\tsurround,\n\twrapSelectionWith,\n\twholeNestedElements,\n\tnextSlice,\n\tsplitBetweenWith,\n\tsplitText,\n\tundo,\n\tabc\n}","import * as Range from \"./range\"\nimport * as Node from \"./node\"\n\nexport default {\n\tRange,\n\tNode\n}"],"names":["Node"],"mappings":"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"}